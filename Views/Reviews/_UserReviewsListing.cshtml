@model projectWEB.ViewModels.REviewsListingViewModel

@if (Model != null && Model.Reviews != null && Model.Reviews.Count > 0)
{
    <div class="container">
        @foreach (var review in Model.Reviews)
        {
            var defaultStars = ConfigurationsHelper.DefaultRating - review.Rating;

            var reviewedProduct = Model.ReviewedProducts != null ? Model.ReviewedProducts.FirstOrDefault(x => x.ID == review.RecordID) : null;

            <div class="row mb-2 pt-2 border-top">
                <div class="col-xs-2 col-md-1 col-lg-1 p-0">
                    @Html.UserAvatar(review.User.Picture, "img-responsive img-thumbnail", alt: review.User.UserName, lazyLoad: false)
                </div>
                <div class="col-xs-10 col-md-11 col-lg-11">
                    <div class="mb-2">
                        <div class="mic-info">
                            @("PP.UserProfile.UserReviews.ReviewUserName".Replace("{user}", review.User.FullName))
                            <span class="small text-muted">
                                @("PP.UserProfile.UserReviews.ReviewTimestamp".Replace("{datetime}", review.TimeStamp.ToString()))
                            </span>
                        </div>
                        @if (reviewedProduct != null && reviewedProduct.ProductRecords != null && reviewedProduct.ProductRecords.Count > 0)
                        {
                            var currentLanguageProductRecord = reviewedProduct.ProductRecords.FirstOrDefault(x => x.LanguageID == 1);

                            <a class="text-primary" href="@Url.ProductDetails(category: reviewedProduct.Category.SanitizedName, ID: reviewedProduct.ID)" target="_blank">
                                @(currentLanguageProductRecord != null ? currentLanguageProductRecord.Name : string.Empty)
                            </a>
                        }
                    </div>
                    <div class="d-flex align-items-center mb-2">
                        <div class="mr-auto text-warning">
                            @for (int i = 1; i <= review.Rating; i++)
                            {
                                <i class="fas fa-star"></i>
                            }

                            @for (int i = 1; i <= defaultStars; i++)
                            {
                                <i class="far fa-star"></i>
                            }
                        </div>
                        <div class="ml-auto text-danger pointerCursor">
                            <i class="fas fa-trash-alt btnDeleteComment" title="@("PP.UserProfile.UserReviews.DeleteReview")" data-id="@review.ID"></i>
                        </div>
                    </div>
                    <div class="comment-text">
                        @review.Text
                    </div>
                </div>
            </div>
        }
    </div>

    if (Model.Pager != null && Model.Pager.TotalPages > 1)
    {
        <nav>
            <ul class="pagination justify-content-center">
                @if (Model.Pager.CurrentPage == 1)
                {
                    <li class="page-item disabled">
                        <a class="page-link" href="#">@("PP.UserProfile.UserReviews.Previous")</a>
                    </li>
                }
                else
                {
                    <li class="page-item">
                        <a class="page-link dataLink" data-href="@Url.UserReviews(searchTerm: Model.SearchTerm, pageNo: Model.Pager.CurrentPage - 1)">@("PP.UserProfile.UserReviews.Previous")</a>
                    </li>
                }

                @for (int xpage = Model.Pager.StartPage; xpage < Model.Pager.EndPage + 1; xpage++)
                {
                    var active = xpage == Model.Pager.CurrentPage ? "active" : string.Empty;

                    <li class="page-item @active">
                        <a class="page-link dataLink" data-href="@(!string.IsNullOrEmpty(active) ? "" : Url.UserReviews(searchTerm: Model.SearchTerm, pageNo: xpage))">
                            @xpage
                        </a>
                    </li>
                }

                @if (Model.Pager.CurrentPage == Model.Pager.EndPage)
                {
                    <li class="page-item disabled">
                        <a class="page-link" href="#">@("PP.UserProfile.UserReviews.Next")</a>
                    </li>
                }
                else
                {
                    <li class="page-item">
                        <a class="page-link dataLink" data-href="@Url.UserReviews(searchTerm: Model.SearchTerm, pageNo: Model.Pager.CurrentPage + 1)">@("PP.UserProfile.UserReviews.Next")</a>
                    </li>
                }
            </ul>
        </nav>
    }
}
else
{
    <div class="alert alert-warning rounded-0 m-0" role="alert">
        @("PP.UserProfile.UserReviews.NoReviewsFound")
    </div>
}

<script>
    $("#searchForm").submit(function (e) {
        searchReviews();

        e.preventDefault();
    });

    $("#searchBtn").click(searchReviews);

    function searchReviews() {
        addLoader("response-holder");
        $.ajax({
	    	url: "@Url.UserReviews()",
	    	method: "post",
            data: $("#searchForm").serialize()
	    })
	    .done(function (response) {
            $("#response-holder").html(response);
            removeLoader("response-holder");
	    })
		.fail(function () {
             Swal.fire("@("PP.Message.Error")", "@("PP.Message.GenericErrorMessage")", "error");
		});
    }

    $(".dataLink").click(function () {
        var url = $(this).attr("data-href");

        if (url != undefined && url != "") {
            addLoader("response-holder");

            $.ajax({
                url: url,
            })
            .done(function (response) {
                $("#response-holder").html(response);
                removeLoader("response-holder");
            })
			.fail(function () {
                 Swal.fire("@("PP.Message.Error")", "@("PP.Message.GenericErrorMessage")", "error");
			});
        }
    });

    $(".btnDeleteComment").click(function () {
        swal.fire({
			title: "@("PP.UserProfile.UserReviews.ReviewDeleteWarning")",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: '@("PP.UserProfile.UserReviews.ReviewDeleteConfirm")',
            cancelButtonText: '@("PP.UserProfile.UserReviews.ReviewDeleteCancel")'
		})
        .then((result) => {
			if (result.value) {
                addLoader("response-holder");

				$.ajax({
					url: "@Url.DeleteAction("Reviews")",
                    method: "post",
                    data: { id : $(this).attr("data-id") }
				})
                .done(function (response) {
                    removeLoader("response-holder");
                    if (response != null && response.Success != undefined && response.Success) {
                        searchComments();
				    }
				    else {
                        Swal.fire("@("PP.Message.Error")", response.Message, "error");
				    }
				})
			    .fail(function () {
                     Swal.fire("@("PP.Message.Error")", "@("PP.Message.GenericErrorMessage")", "error");
			    });
			}
		});
     });
</script>