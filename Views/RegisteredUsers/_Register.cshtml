@model projectWEB.ViewModels.RegisterViewModel

<form id="registerForm" method="post">
    @Html.AntiForgeryToken()
    <div class="group-input">
        <label for="FullName">@("PP.Register.FullName") <span class="text-danger">*</span></label>
        <input class="form-control" name="FullName" placeholder="@("PP.Register.FullNamePlaceholder")" onfocus="this.placeholder = ''" onblur="this.placeholder = '@("PP.Register.FullNamePlaceholder")'" value="@Model.FullName">
    </div>
    <div class="group-input">
        <label for="Email">@("PP.Register.Email") <span class="text-danger">*</span></label>
        <input class="form-control" name="Email" placeholder="@("PP.Register.EmailPlaceholder")" onfocus="this.placeholder = ''" onblur="this.placeholder = '@("PP.Register.EmailPlaceholder")'" value="@Model.Email">
    </div>
    <div class="group-input">
        <label for="username">@("PP.Register.Username") <span class="text-danger">*</span></label>
        <input class="form-control" name="Username" placeholder="@("PP.Register.UsernamePlaceholder")" onfocus="this.placeholder = ''" onblur="this.placeholder = '@("PP.Register.UsernamePlaceholder")'" value="@Model.Username">
    </div>
    <div class="group-input">
        <label for="pass">@("PP.Register.Password") <span class="text-danger">*</span></label>
        <input type="password" class="form-control" name="Password" placeholder="@("PP.Register.PasswordPlaceholder")" onfocus="this.placeholder = ''" onblur="this.placeholder = '@("PP.Register.PasswordPlaceholder")'" id="regPassword">
    </div>
    <div class="group-input">
        <label for="pass">@("PP.Register.ConfirmPassword") <span class="text-danger">*</span></label>
        <input type="password" class="form-control" name="ConfirmPassword" placeholder="@("PP.Register.ConfirmPasswordPlaceholder")" onfocus="this.placeholder = ''" onblur="this.placeholder = '@("PP.Register.ConfirmPasswordPlaceholder")'">
    </div>
    <div class="group-input errorsRow" style="display:none">
        <div class="alert alert-danger errorMessages mb-0" role="alert"></div>
    </div>
    <button type="submit" id="registerButton" class="site-btn login-btn">@("PP.Register.RegisterAccount")</button>
</form>

<script>
    var _fullNameRequired = "@("PP.Register.Validation.FullNameRequired")";
    var _usernameRequired = "@("PP.Register.Validation.UsernameRequired")";
    var _emailRequired = "@("PP.Register.Validation.EmailRequired")";
    var _emailFormat = "@("PP.Register.Validation.EmailFormat")";
    var _passwordRequired = "@("PP.Register.Validation.PasswordRequired")";
    var _confirmPasswordRequired = "@("PP.Register.Validation.ConfirmPasswordRequired")";
    var _passwordNotMatch = "@("PP.Register.Validation.PasswordNotMatched")";

    validateRegisterForm();

    $("#registerForm").submit(function (e) {
        submitForm();

        e.preventDefault();
    });

    function submitForm() {
        $(".errorsRow .errorMessages", "#registerForm").html("");
        $(".errorsRow", "#registerForm").hide(200);
        $(".errorsRow .errorMessages", "#registerForm").hide();

        if ($("#registerForm").valid()) {
            addLoader("register-container");

            $.ajax({
                url: "@Url.Register()",
                type: "post",
                data: $("#registerForm").serialize(),
            })
            .done(function (response) {
                if (response != null && response.Success) {
                    window.location.href = "@Url.Home()";
                }
                else {
                    removeLoader("register-container");

                    $(".errorsRow .errorMessages", "#registerForm").html(response.Messages);
                    $(".errorsRow", "#registerForm").show(200);
                    $(".errorsRow .errorMessages", "#registerForm").show();
                }
             })
             .fail(function(jqXHR, textStatus, errorThrown) {
                 removeLoader("register-container");

                 Swal.fire("@("PP.Message.Error")", "@("PP.Message.GenericErrorMessage")", "error");

                 console.log('jqXHR:' + jqXHR);
                 console.log('textStatus:' + textStatus);
                 console.log('errorThrown:' + errorThrown);
             });
        }
    }
</script>