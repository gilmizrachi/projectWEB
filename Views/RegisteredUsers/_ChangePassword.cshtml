@model projectWEB.ViewModels.ProfileDetailsViewModel

@if (Model != null && Model.User != null)
{
    <form id="frmUserInfo">
        <input type="hidden" name="ID" />
        <div class="form-group row">
            <label class="col-sm-3 col-form-label text-right">@("PP.UserProfile.ChangePassword.CurrentPassword")</label>
            <div class="col-sm-9">
                <input type="password" class="form-control" name="OldPassword" required>
            </div>
        </div>
        <div class="form-group row">
            <label class="col-sm-3 col-form-label text-right">@("PP.UserProfile.ChangePassword.NewPassword")</label>
            <div class="col-sm-9">
                <input type="password" class="form-control" name="NewPassword" id="NewPassword" required>
            </div>
        </div>
        <div class="form-group row">
            <label class="col-sm-3 col-form-label text-right">@("PP.UserProfile.ChangePassword.ConfirmPassword")</label>
            <div class="col-sm-9">
                <input type="password" class="form-control" name="ConfirmPassword" required>
            </div>
        </div>
        <div class="form-group row">
            <div class="offset-sm-3 col-sm-9">
                <button id="btnUpdate" type="button" class="btn btn-success"><i class="fas fa-edit mr-1"></i> @("PP.UserProfile.ChangePassword.UpdatePassword")</button>
            </div>
        </div>
    </form>
}

<script>
   $("#frmUserInfo").validate({
            errorClass: "alert alert-danger",
            errorElement: "div",
            rules: {
                OldPassword: {
                    required: true,
                },
                NewPassword: {
                    required: true,
                },
                ConfirmPassword: {
                    required: true,
                    equalTo: "#NewPassword"
                },
            },
            messages: {
                OldPassword: {
                    required: "@("PP.UserProfile.ChangePassword.Validations.OldPasswordRequired")",
                },
                NewPassword: {
                    required: "@("PP.UserProfile.ChangePassword.Validations.NewPasswordRequired")",
                },
                ConfirmPassword: {
                    required: "@("PP.UserProfile.ChangePassword.Validations.ConfirmPasswordRequired")",
                    equalTo: "@("PP.UserProfile.ChangePassword.Validations.PasswordsNotMatched")"
                },
            },
            highlight: function (element, errorClass) {
                $(element).removeClass(errorClass);
            }
        });

    $("#btnUpdate").click(function () {
        if ($("#frmUserInfo").valid()) {
                addLoader("response-holder");

                $.ajax({
                    url: "@Url.UpdatePassword()",
                    type: "post",
                    data: $("#frmUserInfo").serialize()
                })
                .done(function (response) {
                    removeLoader("response-holder");

                    if (response.Success) {
                        Swal.fire("@("PP.Message.Success")", "@("PP.UserProfile.ChangePassword.PasswordsUpdated")", "success");
                    }
                    else {
                        Swal.fire("@("PP.Message.Error")", response.Message, "error");
                    }
                }).fail(function(jqXHR, textStatus, errorThrown) {
                removeLoader("response-holder");

                 Swal.fire("@("PP.Message.Error")", "@("PP.Message.GenericErrorMessage")", "error");

                 console.log('jqXHR:' + jqXHR);
                 console.log('textStatus:' + textStatus);
                 console.log('errorThrown:' + errorThrown);
             });
        }
	});
</script>